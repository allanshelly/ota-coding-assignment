generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Position {
  id                 Int      @id @default(autoincrement())
  subcompany         String
  office             String
  department         String
  recruitingCategory String?
  name               String
  employmentType     String
  seniority          String
  schedule           String
  yearsOfExperience  String?
  keywords           String?
  occupation         String
  occupationCategory String
  createdAt          DateTime
  status             Status @default(PENDING)

  userId Int
  user   User @relation(fields: [userId], references: [id])

  notifications Notification[]

  jobDescriptions   JobDescription[]
  additionalOffices AdditionalOffice[]
}

model JobDescription {
  id         String   @id @default(cuid())
  name       String
  value      String
  positionId Int
  position   Position @relation(fields: [positionId], references: [id])
}

model AdditionalOffice {
  id         String   @id @default(cuid())
  name       String
  positionId Int
  position   Position @relation(fields: [positionId], references: [id])
}

enum Role {
  MODERATOR
  JOBSEEKER
}

enum Status {
  PENDING
  APPROVED
  SPAM
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  positions     Position[]
  notifications Notification[] @relation(name: "ModNotifications")
}

model Notification {
  id        Int      @id @default(autoincrement())
  title     String
  message   String
  read      Boolean  @default(false)
  jobId     Int
  createdAt DateTime @default(now())
  modId     Int

  job  Position @relation(fields: [jobId], references: [id])
  user User     @relation(name: "ModNotifications", fields: [modId], references: [id])
}
